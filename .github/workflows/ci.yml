name: VGF Adapter for Model Explorer CI
on:
  push:
    branches: ["main"]
    tags:
      - "v*.*.*"
  pull_request:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: "0 3 */6 * *"
env:
  LLVM_REF: 802ea0eb78f7c974d4097c38587f4c207451d7ee
  FLATBUFFERS_REF: 595bf0007ab1929570c7671f091313c8fc20644e
  ARGPARSE_REF: 3eda91b2e1ce7d569f84ba295507c4cd8fd96910
  JSON_REF: 55f93686c01528224f448c19128836e7df245f72
  VGF_LIB_REF: bf2de11731b7e60a8f1fe04da47a56fa003a80ed
  MODEL_CONVERTER_REF: d990f8a45b65b76a28951f1958bb72a69c3e58e3
  ME_REPO_ACCESS_APP_ID: ${{ secrets.ME_REPO_ACCESS_APP_ID }}
  ME_REPO_ACCESS_PRIVATE_KEY: ${{ secrets.ME_REPO_ACCESS_PRIVATE_KEY }}
jobs:
  build-x64:
    name: Build (x64)
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/build-wheel
        with:
          runner: ubuntu-22.04
          python-version: ${{ matrix.python-version }}
          platform: manylinux_2_35_x86_64
          arch: x64
          llvm-ref: ${{ env.LLVM_REF }}
          flatbuffers-ref: ${{ env.FLATBUFFERS_REF }}
          argparse-ref: ${{ env.ARGPARSE_REF }}
          json-ref: ${{ env.JSON_REF }}
          vgf-lib-ref: ${{ env.VGF_LIB_REF }}
          model-converter-ref: ${{ env.MODEL_CONVERTER_REF }}
          me-repo-access-app-id: ${{ env.ME_REPO_ACCESS_APP_ID }}
          me-repo-access-private-key: ${{ env.ME_REPO_ACCESS_PRIVATE_KEY }}

  build-arm64:
    if: ${{ !github.event.repository.private }}
    name: Build (arm64)
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/build-wheel
        with:
          runner: ubuntu-22.04-arm
          python-version: ${{ matrix.python-version }}
          platform: manylinux_2_35_aarch64
          arch: arm64
          llvm-ref: ${{ env.LLVM_REF }}
          flatbuffers-ref: ${{ env.FLATBUFFERS_REF }}
          argparse-ref: ${{ env.ARGPARSE_REF }}
          json-ref: ${{ env.JSON_REF }}
          vgf-lib-ref: ${{ env.VGF_LIB_REF }}
          model-converter-ref: ${{ env.MODEL_CONVERTER_REF }}
          me-repo-access-app-id: ${{ env.ME_REPO_ACCESS_APP_ID }}
          me-repo-access-private-key: ${{ env.ME_REPO_ACCESS_PRIVATE_KEY }}

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/') && github.repository_owner == 'arm'
    needs:
      - build-x64
      - build-arm64
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/vgf-adapter-model-explorer
    permissions:
      id-token: write

    steps:
      - uses: getsentry/action-github-app-token@d4b5da6c5e37703f8c3b3e43abb5705b46e159cc #v3.0.0
        id: get_app_token
        with:
          app_id: ${{ env.ME_REPO_ACCESS_APP_ID }}
          private_key: ${{ env.ME_REPO_ACCESS_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.get_app_token.outputs.token }}

      - name: Generate release notes
        uses: orhun/git-cliff-action@4a4a951bc43fafe41cd2348d181853f52356bee7 # v4.4.2
        id: git-cliff
        with:
          config: cliff.toml
          args: --latest
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}

      - name: Download all wheel artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: python-wheels-*
          path: dist/
          merge-multiple: true

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # release/v1.12.4

      - name: Publish GitHub release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: CHANGELOG.md
          files: dist/*.whl
          token: ${{ steps.get_app_token.outputs.token }}

  sync-commits-to-public-repo:
    name: Sync commits to public repo
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository_owner != 'arm'
    needs: build-x64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Checkout target repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: arm/vgf-adapter-model-explorer
          token: ${{ secrets.ARM_ORG_TOKEN }}
          path: target-repo
      - name: Push commits to public repo
        run: |
          cd target-repo
          git remote add source ${{ github.server_url }}/${{ github.repository }}
          git fetch source main
          git checkout main
          git merge source/main
          git push origin main

  sync-release-tags-to-public-repo:
    name: Sync release tags to public repo
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && github.repository_owner != 'arm'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Checkout target repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: arm/vgf-adapter-model-explorer
          token: ${{ secrets.ARM_ORG_TOKEN }}
          path: target-repo
      - name: Push tags to public repo
        run: |
          cd target-repo
          git remote add source ${{ github.server_url }}/${{ github.repository }}
          git fetch source --tags
          git push origin 'refs/tags/v*.*.*'
